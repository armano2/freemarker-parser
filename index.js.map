{"version":3,"file":"index.js.map","sources":["src/ParserError.ts","src/Types.ts","src/Symbols.ts","src/Parser.ts"],"sourcesContent":["export default class ParserError extends Error {\n  constructor (m : string) {\n      super(m)\n\n      // Set the prototype explicitly.\n      Object.setPrototypeOf(this, ParserError.prototype)\n  }\n}\n","// TODO: create specific classes/objects for each of this types with additional fields required for them\nexport enum ETypeSymbol {\n  None,\n  Directive,\n  Macro,\n  Interpolation,\n}\n\n// TODO: change this to object with configuration\n// - allowParams\n// - allowchildren\n// - sub elements\nexport enum EType {\n  Program = '@program',\n  Text = '@text',\n  MacroCall = '@macro',\n  Interpolation = '@interpolation',\n  // Build in macro\n  if = 'if',\n    else = 'else',\n    elseif = 'elseif',\n  list = 'list',\n  include = 'include',\n  assign = 'assign',\n  attempt = 'attempt',\n  compress = 'compress',\n  escape = 'escape',\n    noescape = 'noescape',\n  fallback = 'fallback',\n  function = 'function',\n  flush = 'flush',\n  global = 'global',\n  import = 'import',\n  local = 'local',\n  lt = 'lt',\n  macro = 'macro',\n  nested = 'nested',\n  nt = 'nt',\n  recover = 'recover',\n  recurse = 'recurse',\n  return = 'return',\n  rt = 'rt',\n  setting = 'setting',\n  stop = 'stop',\n  switch = 'switch',\n    // else = 'else',\n    case = 'case',\n    break = 'break',\n  t = 't',\n  visit = 'visit',\n}\n","import { ETypeSymbol } from './Types'\n\nexport interface ISymbol {\n  startToken : string\n  endToken : string\n  type : ETypeSymbol\n}\n\nexport const symbols : ISymbol[] = [\n  { startToken: '<#', endToken: '>', type: ETypeSymbol.Directive },\n  { startToken: '<@', endToken: '>', type: ETypeSymbol.Macro },\n  // tslint:disable-next-line:no-invalid-template-strings\n  { startToken: '${', endToken: '}', type: ETypeSymbol.Interpolation },\n]\n\nexport const whitespaces : string[] = [\n  ' ',\n  '\\t',\n  '\\n',\n  '\\r',\n]\n","import { INode } from './Node'\nimport ParserError from './ParserError'\nimport { ISymbol, symbols, whitespaces } from './Symbols'\nimport { EType, ETypeSymbol } from './Types'\n\nexport class Parser {\n  private cursorPos : number = 0\n  private template : string = ''\n  private AST : INode\n\n  constructor () {\n    this.template = ''\n    this.AST = this.makeNode(0, 0, EType.Program)\n    this.cursorPos = 0\n  }\n\n  public parseTokens () {\n    while (this.cursorPos >= 0 && this.cursorPos < this.template.length) {\n      const token = this.parseNode(this.AST)\n      if (!token) {\n        this.AST.children.push(this.makeNode(this.cursorPos, this.template.length))\n        break\n      }\n    }\n  }\n\n  public parse (template : string) : object {\n    this.template = template\n    this.AST = this.makeNode(0, 0, EType.Program)\n    this.cursorPos = 0\n    this.parseTokens()\n    return this.AST\n  }\n\n  private makeNode (startPos : number, endPos : number, type : EType = EType.Text, params : string[] = [], tag : string = '') : INode {\n    return {\n      type,\n      tag,\n      text: type !== EType.Text ? '' : this.template.substring(startPos, endPos),\n      params,\n      loc: {\n        startPos,\n        endPos,\n      },\n      children: [],\n    }\n  }\n\n  private getNextWhitespacePos () : number {\n    let pos = -1\n    for (const item of whitespaces) {\n      const n = this.template.indexOf(item, this.cursorPos)\n      if (n >= 0 && (pos === -1 || n < pos)) {\n        pos = n\n      }\n    }\n    return pos\n  }\n\n  private parseTag () : string {\n    const pos = this.getNextWhitespacePos()\n    if (pos < 0) {\n      throw new ParserError('Missing closing tag') // TODO: add more info like location\n    }\n    return this.template.substring(this.cursorPos, pos)\n  }\n\n  private parseNode (parent : INode) : boolean {\n    let symbol : ISymbol | null = null\n    let startPos : number = 0\n    for (const item of symbols) {\n      const n = this.template.indexOf(item.startToken, this.cursorPos)\n      if (n >= 0 && (!symbol || n < startPos)) {\n        symbol = item,\n        startPos = n\n      }\n    }\n\n    if (!symbol) {\n      return false\n    }\n\n    if (startPos - 1 > this.cursorPos) {\n      parent.children.push(this.makeNode(this.cursorPos, startPos - 1))\n    }\n    this.cursorPos = startPos\n\n    this.cursorPos += symbol.startToken.length\n\n    let node : INode | null = null\n\n    switch (symbol.type) {\n      case ETypeSymbol.Directive: // <#foo>\n        node = this.parseDirective(symbol, startPos)\n        break\n      case ETypeSymbol.Macro: // <@foo>\n        node = this.parseMacro(symbol, startPos)\n        break\n      case ETypeSymbol.Interpolation: // ${ foo?string }\n        node = this.parsePrint(symbol, startPos)\n        break\n      default:\n        break\n    }\n\n    if (node) {\n      parent.children.push(node)\n    }\n\n    ++this.cursorPos\n    return true\n  }\n\n  private parsePrint (symbol : ISymbol, startPos : number) : INode {\n    const params : string[] = this.parseParams(symbol.endToken)\n    const node = this.makeNode(startPos, this.cursorPos, EType.Interpolation, params)\n    return node\n  }\n\n  private parseMacro (symbol : ISymbol, startPos : number) : INode {\n    const typeString = this.parseTag()\n    this.cursorPos += typeString.length\n\n    const params : string[] = this.parseParams(symbol.endToken)\n\n    const node = this.makeNode(startPos, this.cursorPos, EType.MacroCall, params, typeString)\n\n    return node\n  }\n\n  private parseDirective (symbol : ISymbol, startPos : number) : INode {\n    const typeString = this.parseTag()\n    if (!(typeString in EType)) {\n      throw new ParserError(`Unsupported directive ${typeString}`) // TODO: add more info like location\n    }\n    this.cursorPos += typeString.length\n\n    const params : string[] = this.parseParams(symbol.endToken)\n\n    const node : INode = this.makeNode(startPos, this.cursorPos, typeString as EType, params)\n    // TODO; read params\n\n    return node\n  }\n\n  private isWhitespace (char : string) : boolean {\n    return char === ' ' || char === '\\t' || char === '\\r' || char === '\\n'\n  }\n\n  // foo?string\n  // foo.foo\n  // (foo * 2)\n  // <#if \"adsddsasd >\"\n  // <#if foo == 2>\n  // \"foo bar\"\n  // (foo > bar)\n  private parseParams (engTag : string) : string[] {\n    const text = this.template.substring(this.cursorPos)\n    const params : string[] = []\n    let paramText : string = ''\n    let paramPos : number = this.cursorPos\n    let bracketLevel = 0\n    let inString = false\n\n    for (const char of text) {\n      if (char === '\"') {\n        inString = !inString\n      }\n\n      if (!inString) {\n        if (char === '(') {\n          ++bracketLevel\n        } else if (char === ')') {\n          --bracketLevel\n        }\n      }\n\n      if (bracketLevel < 0) {\n        throw new ParserError(`bracketLevel < 0`) // TODO: add more info like location\n      }\n\n      if (bracketLevel === 0 && !inString) {\n        if (char === engTag) {\n          if (paramText !== '') {\n            params.push(paramText)\n            paramText = ''\n          }\n          ++paramPos\n          this.cursorPos = paramPos\n          return params\n        } else if (this.isWhitespace(char)) {\n          if (paramText !== '') {\n            params.push(paramText)\n            paramText = ''\n          }\n          ++paramPos\n          this.cursorPos = paramPos\n        } else {\n          paramText += char\n          ++paramPos\n        }\n      } else {\n        paramText += char\n        ++paramPos\n      }\n    }\n    throw new ParserError(`Unclosed directive or macro`) // TODO: add more info like location\n  }\n}\n\n// When you want to test if x > 0 or x >= 0, writing <#if x > 0> and <#if x >= 0> is WRONG,\n// as the first > will close the #if tag. To work that around, write <#if x gt 0> or <#if gte 0>.\n// Also note that if the comparison occurs inside parentheses, you will have no such problem,\n// like <#if foo.bar(x > 0)> works as expected.\n"],"names":[],"mappings":"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"}